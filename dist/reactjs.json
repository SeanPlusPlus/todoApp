{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "noeticforce.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qta6g", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "joey_php", "media": null, "name": "t3_5qta6g", "score": 26, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/CnKXgCoEfea0-uMIt7v5nheOcfvYocMRsa-3ttCbnRk.jpg?s=2388e68c328a933f99a3ab2110a96c86", "width": 950, "height": 490}, "resolutions": [{"url": "https://i.redditmedia.com/CnKXgCoEfea0-uMIt7v5nheOcfvYocMRsa-3ttCbnRk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=7bf7097504b79fee540399f07a22c852", "width": 108, "height": 55}, {"url": "https://i.redditmedia.com/CnKXgCoEfea0-uMIt7v5nheOcfvYocMRsa-3ttCbnRk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=aad2742a0ee8984108f3029e9050d798", "width": 216, "height": 111}, {"url": "https://i.redditmedia.com/CnKXgCoEfea0-uMIt7v5nheOcfvYocMRsa-3ttCbnRk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=2fc3f71a6ed2b6033c4e6831a909f0a7", "width": 320, "height": 165}, {"url": "https://i.redditmedia.com/CnKXgCoEfea0-uMIt7v5nheOcfvYocMRsa-3ttCbnRk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=82609c9aefe948659e3780b37a58e5be", "width": 640, "height": 330}], "variants": {}, "id": "dnW2qL3BuYW-EcncL7c4lejnVjTC67TTjrxLpisVx7c"}]}, "thumbnail": "http://a.thumbs.redditmedia.com/mKJsG0PkK6T1s-L0O7KH9tYoRljlzAd0HTsnUw-QvZ8.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qta6g/10_best_reactjs_tutorials_with_examples/", "locked": false, "stickied": false, "created": 1485716109.0, "url": "http://noeticforce.com/best-reactjs-tutorials-with-examples", "author_flair_text": null, "quarantine": false, "title": "10 Best ReactJS Tutorials With Examples", "created_utc": 1485687309.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 26}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "youtube.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qvurl", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "thousande", "media": null, "name": "t3_5qvurl", "score": 4, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/uAB0hLf4x9No0DheHdf0T024oXtBVjPahLk8i3vYvc0.jpg?s=67a63a92c8951bdca931b15ce65a3fdb", "width": 1280, "height": 720}, "resolutions": [{"url": "https://i.redditmedia.com/uAB0hLf4x9No0DheHdf0T024oXtBVjPahLk8i3vYvc0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=31e303c2559824a9a973d37e5bccb874", "width": 108, "height": 60}, {"url": "https://i.redditmedia.com/uAB0hLf4x9No0DheHdf0T024oXtBVjPahLk8i3vYvc0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=2e96a90013014aaf6293ed38a03af73c", "width": 216, "height": 121}, {"url": "https://i.redditmedia.com/uAB0hLf4x9No0DheHdf0T024oXtBVjPahLk8i3vYvc0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=6fdd23a1359f05954ec71fc6ada1d191", "width": 320, "height": 180}, {"url": "https://i.redditmedia.com/uAB0hLf4x9No0DheHdf0T024oXtBVjPahLk8i3vYvc0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=8cabd5b8fc13f7afa726061d87bf7095", "width": 640, "height": 360}, {"url": "https://i.redditmedia.com/uAB0hLf4x9No0DheHdf0T024oXtBVjPahLk8i3vYvc0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=07ae6fdb874f5a7e66cc14b0af69075e", "width": 960, "height": 540}, {"url": "https://i.redditmedia.com/uAB0hLf4x9No0DheHdf0T024oXtBVjPahLk8i3vYvc0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=34f0fc50cbc61866c39974159f31fdfb", "width": 1080, "height": 607}], "variants": {}, "id": "ErGgvVikjQZjeFo28eFk9D2Rqem4RGQ0DpI-O8X7JtE"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/EW6zS2_Z86MjOosZKdBfDjj50vqJObaUMhLhdjQXEyw.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qvurl/thisjavascript_0128_vue_react_angular_rxjs/", "locked": false, "stickied": false, "created": 1485749948.0, "url": "https://www.youtube.com/watch?v=InOWBvseRYU", "author_flair_text": null, "quarantine": false, "title": "This.JavaScript 01/28 - Vue, React, Angular, RxJS, Polymer &amp; Ember", "created_utc": 1485721148.0, "link_flair_text": null, "distinguished": null, "num_comments": 1, "visited": false, "num_reports": null, "ups": 4}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "dinosaurscode.xyz", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qtery", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "avi00", "media": null, "name": "t3_5qtery", "score": 14, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/UuR9WK6rIMo1Larif5nkJNsEkgJs_nOGghZYc28HSx4.jpg?s=113b669e976b3a0e044c907fc95740a5", "width": 530, "height": 337}, "resolutions": [{"url": "https://i.redditmedia.com/UuR9WK6rIMo1Larif5nkJNsEkgJs_nOGghZYc28HSx4.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=100710b86197b8e4a2566ee9bca1c946", "width": 108, "height": 68}, {"url": "https://i.redditmedia.com/UuR9WK6rIMo1Larif5nkJNsEkgJs_nOGghZYc28HSx4.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=e54255ceec115ca8437ff38165b00fbc", "width": 216, "height": 137}, {"url": "https://i.redditmedia.com/UuR9WK6rIMo1Larif5nkJNsEkgJs_nOGghZYc28HSx4.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=672c9059bd8684c10e0f6023460d99ec", "width": 320, "height": 203}], "variants": {}, "id": "Mn9MmVTzPLPcWp24fhVBHRXRiQoUj46B4BimsrmMVLY"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/o1dn38xqwcFdkDIxuH2xb01JHcj6dT2Fe34XCNEfSEc.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qtery/reactjs_tutorial_for_beginners/", "locked": false, "stickied": false, "created": 1485718835.0, "url": "https://dinosaurscode.xyz/tutorials/2016/06/30/reactjs-tutorial-for-beginners/", "author_flair_text": null, "quarantine": false, "title": "React.js Tutorial for Beginners", "created_utc": 1485690035.0, "link_flair_text": null, "distinguished": null, "num_comments": 8, "visited": false, "num_reports": null, "ups": 14}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello all,&lt;/p&gt;\n\n&lt;p&gt;Would love to share with u a new ui-kit react components library!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/stangaone1/reactjs-components\"&gt;https://github.com/stangaone1/reactjs-components&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Feedbacks on how to improve are welcomed!&lt;/p&gt;\n\n&lt;p&gt;What do u think ?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hello all,\n\nWould love to share with u a new ui-kit react components library!\n\nhttps://github.com/stangaone1/reactjs-components\n\nFeedbacks on how to improve are welcomed!\n\nWhat do u think ?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qsxpz", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "Razvanip", "media": null, "name": "t3_5qsxpz", "score": 7, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/IYlWbkXZMFbXchdJJ-_gVsSHNSe9B_sCQLR_M0olAMo.jpg?s=6fd05d47caf9ae3639debaabef5fa6f8", "width": 420, "height": 420}, "resolutions": [{"url": "https://i.redditmedia.com/IYlWbkXZMFbXchdJJ-_gVsSHNSe9B_sCQLR_M0olAMo.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=f1ac830789a575dc0f4dde3b492b39d6", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/IYlWbkXZMFbXchdJJ-_gVsSHNSe9B_sCQLR_M0olAMo.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=9fb053617378a9dfeba735582a303047", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/IYlWbkXZMFbXchdJJ-_gVsSHNSe9B_sCQLR_M0olAMo.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=d840dec50e145bc99cca6bac2f7e8d61", "width": 320, "height": 320}], "variants": {}, "id": "19mr4GALtLXqoHzhDQLC_ENOfnAbhhbHyqwb8ChWvpQ"}]}, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "self", "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qsxpz/new_components_uilibrary/", "locked": false, "stickied": false, "created": 1485708269.0, "url": "https://www.reddit.com/r/reactjs/comments/5qsxpz/new_components_uilibrary/", "author_flair_text": null, "quarantine": false, "title": "New components ui-library", "created_utc": 1485679469.0, "link_flair_text": null, "distinguished": null, "num_comments": 1, "visited": false, "num_reports": null, "ups": 7}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "hapi-react-fullstack-bp.herokuapp.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qvcme", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "eseom", "media": null, "name": "t3_5qvcme", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/EH_-IPujSUxd5QD8s58RMGgxmQZtRSSEg4tYpxdEpbY.jpg?s=b702017e5e4c41eccb754a9331aa2f36", "width": 512, "height": 512}, "resolutions": [{"url": "https://i.redditmedia.com/EH_-IPujSUxd5QD8s58RMGgxmQZtRSSEg4tYpxdEpbY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=dfdc69d13192825ba9efec0b906c3738", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/EH_-IPujSUxd5QD8s58RMGgxmQZtRSSEg4tYpxdEpbY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=bc0e51628685c4aa3f594677681d358b", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/EH_-IPujSUxd5QD8s58RMGgxmQZtRSSEg4tYpxdEpbY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=4374f6e0be2d54d43d4e2c049d32f6f4", "width": 320, "height": 320}], "variants": {}, "id": "8fAdhy__0ZotgEFBwELfS9O6nZvZvg694CGDFdopR90"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/8lKw-5eNNFTesq9Ef2ug4ROS3qcDKujHL5h2s8riDuw.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qvcme/yet_another_boilerplate_with_hapi_react_semanticui/", "locked": false, "stickied": false, "created": 1485744710.0, "url": "https://hapi-react-fullstack-bp.herokuapp.com", "author_flair_text": null, "quarantine": false, "title": "Yet Another boilerplate with hapi, react, semanticUI", "created_utc": 1485715910.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m learning React and also want to build a new static portfolio site. I&amp;#39;d like to use an existing template from &lt;a href=\"https://html5up.net/\"&gt;HTML5 UP&lt;/a&gt; because they look good. Would it be worth my time as a learning exercise to port one of these site templates into React, or am I better off just building something from the ground up?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm learning React and also want to build a new static portfolio site. I'd like to use an existing template from [HTML5 UP](https://html5up.net/) because they look good. Would it be worth my time as a learning exercise to port one of these site templates into React, or am I better off just building something from the ground up?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qsm0a", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "conqueso", "media": null, "name": "t3_5qsm0a", "score": 4, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/vJ5WicRfs8pgHCXOfVsLcsawJf8_sWRCIFjAlyT98_U.jpg?s=9c2d315940114724f5327cf236082800", "width": 1200, "height": 1200}, "resolutions": [{"url": "https://i.redditmedia.com/vJ5WicRfs8pgHCXOfVsLcsawJf8_sWRCIFjAlyT98_U.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=03e5aaae927d6ac8731b12fef1846280", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/vJ5WicRfs8pgHCXOfVsLcsawJf8_sWRCIFjAlyT98_U.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=4f63747b37c7936264bb9d690137fddc", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/vJ5WicRfs8pgHCXOfVsLcsawJf8_sWRCIFjAlyT98_U.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=e4d74d1292077033af1a4c29df285c02", "width": 320, "height": 320}, {"url": "https://i.redditmedia.com/vJ5WicRfs8pgHCXOfVsLcsawJf8_sWRCIFjAlyT98_U.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=c307907e525fc7efc8fc48f77d86e35c", "width": 640, "height": 640}, {"url": "https://i.redditmedia.com/vJ5WicRfs8pgHCXOfVsLcsawJf8_sWRCIFjAlyT98_U.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=edba45a522b0d7d5944130de8a9bb846", "width": 960, "height": 960}, {"url": "https://i.redditmedia.com/vJ5WicRfs8pgHCXOfVsLcsawJf8_sWRCIFjAlyT98_U.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=bc16721c322e4c79bd150adca27df6ae", "width": 1080, "height": 1080}], "variants": {}, "id": "GZyTcQSFLQJCtg7oo66kcZmYFQaNfUM631JxYavUwTw"}]}, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "self", "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qsm0a/is_it_worth_it_to_convert_an_existing_site/", "locked": false, "stickied": false, "created": 1485701703.0, "url": "https://www.reddit.com/r/reactjs/comments/5qsm0a/is_it_worth_it_to_convert_an_existing_site/", "author_flair_text": null, "quarantine": false, "title": "Is it worth it to Convert an existing site template to react?", "created_utc": 1485672903.0, "link_flair_text": null, "distinguished": null, "num_comments": 1, "visited": false, "num_reports": null, "ups": 4}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "boilerplate.mhaagens.me", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qnkvi", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "cutcopy", "media": null, "name": "t3_5qnkvi", "score": 55, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "default", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qnkvi/boilerplate_react_router_4_mobx_and_webpack_2/", "locked": false, "stickied": false, "created": 1485639204.0, "url": "https://boilerplate.mhaagens.me/", "author_flair_text": null, "quarantine": false, "title": "Boilerplate - React Router 4, MobX and Webpack 2 with async chunk loading and HMR. Simple way to get started with React.", "created_utc": 1485610404.0, "link_flair_text": null, "distinguished": null, "num_comments": 25, "visited": false, "num_reports": null, "ups": 55}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "medium.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qr8ig", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "abhiaiyer", "media": null, "name": "t3_5qr8ig", "score": 7, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/AfxHqEzuJ2G6490ho8jUgeOnl0ebI2Yn8VaDrrtX4kc.jpg?s=c5b616a07b43dfbea437209dd8e94937", "width": 1200, "height": 598}, "resolutions": [{"url": "https://i.redditmedia.com/AfxHqEzuJ2G6490ho8jUgeOnl0ebI2Yn8VaDrrtX4kc.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=4a7ef57bb71587c48ec2ca02afec12e5", "width": 108, "height": 53}, {"url": "https://i.redditmedia.com/AfxHqEzuJ2G6490ho8jUgeOnl0ebI2Yn8VaDrrtX4kc.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=91b1edc57a8e320a5fb4f20bf49c4bc7", "width": 216, "height": 107}, {"url": "https://i.redditmedia.com/AfxHqEzuJ2G6490ho8jUgeOnl0ebI2Yn8VaDrrtX4kc.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=209c9d5fc31ceb48aba59c948b8082ad", "width": 320, "height": 159}, {"url": "https://i.redditmedia.com/AfxHqEzuJ2G6490ho8jUgeOnl0ebI2Yn8VaDrrtX4kc.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=3ff22f1c313c4dfd02548fbd9d0d6eb1", "width": 640, "height": 318}, {"url": "https://i.redditmedia.com/AfxHqEzuJ2G6490ho8jUgeOnl0ebI2Yn8VaDrrtX4kc.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=141a05a99677b7068ffb857d3ee9fcf4", "width": 960, "height": 478}, {"url": "https://i.redditmedia.com/AfxHqEzuJ2G6490ho8jUgeOnl0ebI2Yn8VaDrrtX4kc.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=1cc4bbcd33d0f1632a5327fc15fbb801", "width": 1080, "height": 538}], "variants": {}, "id": "Pdleqd_iMB-MwGrLEytzVIfSVad0K399fLFZFdc6Y2A"}]}, "thumbnail": "http://a.thumbs.redditmedia.com/hZTY1g_yJFryomyRkKe1D3emyV_mqtyvGMQp_MHdXS8.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qr8ig/your_first_graphql_componen/", "locked": false, "stickied": false, "created": 1485682319.0, "url": "https://medium.com/@abhiaiyer/your-first-graphql-component-ad018e22972c#.l33ohipfl", "author_flair_text": null, "quarantine": false, "title": "Your first GraphQL componen", "created_utc": 1485653519.0, "link_flair_text": null, "distinguished": null, "num_comments": 1, "visited": false, "num_reports": null, "ups": 7}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "appendto.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qpqhg", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "harlampi", "media": null, "name": "t3_5qpqhg", "score": 0, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/SQmtP8sZ_KVQ7ro86Nxtqbm7pv_9vGRYQasz4WHkcno.jpg?s=666b08d702fd9102b613696796eb024a", "width": 300, "height": 140}, "resolutions": [{"url": "https://i.redditmedia.com/SQmtP8sZ_KVQ7ro86Nxtqbm7pv_9vGRYQasz4WHkcno.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=8ad5dbf3e11f262813db5ae0abde322b", "width": 108, "height": 50}, {"url": "https://i.redditmedia.com/SQmtP8sZ_KVQ7ro86Nxtqbm7pv_9vGRYQasz4WHkcno.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=35c1ca12d95578caf11c525dc8344197", "width": 216, "height": 100}], "variants": {}, "id": "6-DU1uRDjVj1MLweYNbxm9T8aMz-XOV8yO5aoKkR1FI"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/ElnrwCs-mfUhddqgm7kHEmyup-Q71DimKhGyPZPYoUE.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qpqhg/handling_events_in_react_101_appendto/", "locked": false, "stickied": false, "created": 1485664563.0, "url": "https://appendto.com/2017/01/react-events-101", "author_flair_text": null, "quarantine": false, "title": "Handling Events in React 101 | appendTo", "created_utc": 1485635763.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 0}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "youtu.be", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "title": "Getting Setup With React - Redux Part 13", "type": "video", "html": "&lt;iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/bYecGDXoh-k?feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 344, "width": 459, "version": "1.0", "author_name": "CodeWithTim", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/bYecGDXoh-k/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UC-4UaMoSmZxS8q_6v-va6Mw"}}, "saved": false, "id": "5qnoc9", "gilded": 0, "secure_media_embed": {"content": "&lt;iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/bYecGDXoh-k?feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 459, "scrolling": false, "height": 344}, "clicked": false, "report_reasons": null, "author": "tmkuk", "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "title": "Getting Setup With React - Redux Part 13", "type": "video", "html": "&lt;iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/bYecGDXoh-k?feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 344, "width": 459, "version": "1.0", "author_name": "CodeWithTim", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/bYecGDXoh-k/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UC-4UaMoSmZxS8q_6v-va6Mw"}}, "name": "t3_5qnoc9", "score": 2, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/BoYZhPw03u4s5L2HpOWtSJNeLgGeSKaBfrK13kBWe7Q.jpg?s=7684cf6c400c2bc482217543ae15bb99", "width": 480, "height": 360}, "resolutions": [{"url": "https://i.redditmedia.com/BoYZhPw03u4s5L2HpOWtSJNeLgGeSKaBfrK13kBWe7Q.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=daf5f45cd2ef5d3f3d021b29f842db30", "width": 108, "height": 81}, {"url": "https://i.redditmedia.com/BoYZhPw03u4s5L2HpOWtSJNeLgGeSKaBfrK13kBWe7Q.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=694c63b6638d6de3acf8082ae49c744e", "width": 216, "height": 162}, {"url": "https://i.redditmedia.com/BoYZhPw03u4s5L2HpOWtSJNeLgGeSKaBfrK13kBWe7Q.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=a460ab434fd4a2c5d00d53bd88e744ff", "width": 320, "height": 240}], "variants": {}, "id": "bE85olrE924fA1Sw7TTiyIvHb5L32awd9YH0D1HNjEw"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/fxqcNPc6VxMMW0UbpIGw6OQeJe3B_7eO1T5qhPrTD-c.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {"content": "&lt;iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/bYecGDXoh-k?feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 459, "scrolling": false, "height": 344}, "post_hint": "rich:video", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qnoc9/getting_setup_with_react_redux_part_13/", "locked": false, "stickied": false, "created": 1485640746.0, "url": "https://youtu.be/bYecGDXoh-k", "author_flair_text": null, "quarantine": false, "title": "Getting Setup With React - Redux part 13", "created_utc": 1485611946.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "github.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qphye", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "moodysalem", "media": null, "name": "t3_5qphye", "score": 0, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/K_QQlQ5BI8eDfC5dr-JInBxoPUg-m1unxBB4MbRyhoA.jpg?s=3a6eefd0a56745b210aa96724d9716a0", "width": 160, "height": 160}, "resolutions": [{"url": "https://i.redditmedia.com/K_QQlQ5BI8eDfC5dr-JInBxoPUg-m1unxBB4MbRyhoA.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=8e54e066e22d467caa9f9d77e2993f6d", "width": 108, "height": 108}], "variants": {}, "id": "zZM7uvQAUkQtbziA58sqj6UamtxAj7F5laUKw95N-JM"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/8_gDEh-gcXcy1lgn_GImVcFfFRsbzUQrAqJsXUN9-AQ.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qphye/an_alternative_to_react_context/", "locked": false, "stickied": false, "created": 1485661984.0, "url": "https://github.com/moodysalem/react-ctxt", "author_flair_text": null, "quarantine": false, "title": "An alternative to react context", "created_utc": 1485633184.0, "link_flair_text": null, "distinguished": null, "num_comments": 1, "visited": false, "num_reports": null, "ups": 0}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey guys, On the &lt;a href=\"https://getstorybook.io/\"&gt;React Storybook page&lt;/a&gt;, there is a color scheme that I am trying to track down which is used in this &lt;a href=\"https://getstorybook.io/static/media/demo.f13d28a7.gif\"&gt;Demo&lt;/a&gt;. It looks awesome. I am a sublime user who is hoping this is available for sublime. Thanks for the help!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hey guys, On the [React Storybook page](https://getstorybook.io/), there is a color scheme that I am trying to track down which is used in this [Demo](https://getstorybook.io/static/media/demo.f13d28a7.gif). It looks awesome. I am a sublime user who is hoping this is available for sublime. Thanks for the help!", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qoiq0", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "djc-1", "media": null, "name": "t3_5qoiq0", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qoiq0/help_tracking_down_the_atom_color_scheme_used_on/", "locked": false, "stickied": false, "created": 1485651420.0, "url": "https://www.reddit.com/r/reactjs/comments/5qoiq0/help_tracking_down_the_atom_color_scheme_used_on/", "author_flair_text": null, "quarantine": false, "title": "Help tracking down the atom color Scheme used on the react storybook page", "created_utc": 1485622620.0, "link_flair_text": null, "distinguished": null, "num_comments": 3, "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "kadwill.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qo06u", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "tomkadwill", "media": null, "name": "t3_5qo06u", "score": 0, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "default", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qo06u/introduction_to_jsx/", "locked": false, "stickied": false, "created": 1485645315.0, "url": "http://kadwill.com/introduction-to-jsx/", "author_flair_text": null, "quarantine": false, "title": "Introduction to JSX", "created_utc": 1485616515.0, "link_flair_text": null, "distinguished": null, "num_comments": 1, "visited": false, "num_reports": null, "ups": 0}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Last week I found an awesome tool to help you develop react UI libraries. It had an editor where you could specify props and see the changes to that component in real time, without having to have a whole react app set up. &lt;/p&gt;\n\n&lt;p&gt;Does anyone know what tool I&amp;#39;m talking about? I&amp;#39;ve been trying to find it online to no avail and it&amp;#39;s killing me :&amp;#39;(&lt;/p&gt;\n\n&lt;p&gt;edit - &lt;strong&gt;FOUND:&lt;/strong&gt; ERRR MAA GEERRRD I FOUND IT ... &lt;a href=\"https://getstorybook.io/\"&gt;https://getstorybook.io/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Last week I found an awesome tool to help you develop react UI libraries. It had an editor where you could specify props and see the changes to that component in real time, without having to have a whole react app set up. \n\nDoes anyone know what tool I'm talking about? I've been trying to find it online to no avail and it's killing me :'(\n\nedit - **FOUND:** ERRR MAA GEERRRD I FOUND IT ... https://getstorybook.io/", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qlqzk", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "Gigi14", "media": null, "name": "t3_5qlqzk", "score": 6, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/nrhCzSAjc_9SKSMRMW-HCN8P7qnuGjhVLkiifLCYPzM.jpg?s=57a3c5acd1c01fe8a957cef8e136cdad", "width": 2518, "height": 1770}, "resolutions": [{"url": "https://i.redditmedia.com/nrhCzSAjc_9SKSMRMW-HCN8P7qnuGjhVLkiifLCYPzM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=0f3404b2932a689f6d165cd4ac680096", "width": 108, "height": 75}, {"url": "https://i.redditmedia.com/nrhCzSAjc_9SKSMRMW-HCN8P7qnuGjhVLkiifLCYPzM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=4e06f4d4c5b99630e054d2cdd81b0d32", "width": 216, "height": 151}, {"url": "https://i.redditmedia.com/nrhCzSAjc_9SKSMRMW-HCN8P7qnuGjhVLkiifLCYPzM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=48b31e3b909ee6380b8da1d192414d5a", "width": 320, "height": 224}, {"url": "https://i.redditmedia.com/nrhCzSAjc_9SKSMRMW-HCN8P7qnuGjhVLkiifLCYPzM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=ba3081509eb197e6a80513244ecf256b", "width": 640, "height": 449}, {"url": "https://i.redditmedia.com/nrhCzSAjc_9SKSMRMW-HCN8P7qnuGjhVLkiifLCYPzM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=5ecebe6efc696c8c7e5516be03f2d05f", "width": 960, "height": 674}, {"url": "https://i.redditmedia.com/nrhCzSAjc_9SKSMRMW-HCN8P7qnuGjhVLkiifLCYPzM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=38dc7ff056a9765e785f7989d74685d3", "width": 1080, "height": 759}], "variants": {}, "id": "fX8u_xaClIpa5BCjQ6vbhlcF-9q5igD2O5rYcPmtwFA"}]}, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": 1485576411.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "self", "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qlqzk/looking_for_stateless_component_design_tool/", "locked": false, "stickied": false, "created": 1485604761.0, "url": "https://www.reddit.com/r/reactjs/comments/5qlqzk/looking_for_stateless_component_design_tool/", "author_flair_text": null, "quarantine": false, "title": "Looking for Stateless Component Design Tool", "created_utc": 1485575961.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 6}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "tech.small-improvements.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qh60r", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "sfrostl", "media": null, "name": "t3_5qh60r", "score": 77, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/ZMB7nBdwhI1XuVWdLiQic7BCqNvUULckKU0a-SEsc9o.jpg?s=c957c909d25ff3b09a507b23ef3da297", "width": 1200, "height": 557}, "resolutions": [{"url": "https://i.redditmedia.com/ZMB7nBdwhI1XuVWdLiQic7BCqNvUULckKU0a-SEsc9o.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=1afb904af0ff7c37eb322f6d22809b96", "width": 108, "height": 50}, {"url": "https://i.redditmedia.com/ZMB7nBdwhI1XuVWdLiQic7BCqNvUULckKU0a-SEsc9o.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=3d9207dd04fa27a6e8ac9a15983fed6e", "width": 216, "height": 100}, {"url": "https://i.redditmedia.com/ZMB7nBdwhI1XuVWdLiQic7BCqNvUULckKU0a-SEsc9o.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=5b2256fd1d97a3de30e18b41bb131a6e", "width": 320, "height": 148}, {"url": "https://i.redditmedia.com/ZMB7nBdwhI1XuVWdLiQic7BCqNvUULckKU0a-SEsc9o.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=deaae656fb3ad28a391c452884d58dc3", "width": 640, "height": 297}, {"url": "https://i.redditmedia.com/ZMB7nBdwhI1XuVWdLiQic7BCqNvUULckKU0a-SEsc9o.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=253fa622e25b32ce7e804bbace83d481", "width": 960, "height": 445}, {"url": "https://i.redditmedia.com/ZMB7nBdwhI1XuVWdLiQic7BCqNvUULckKU0a-SEsc9o.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=af4350568819a8356b1ff0c66e07170a", "width": 1080, "height": 501}], "variants": {}, "id": "LjMcjedixNXtvPAAzX-fRnW2wmVvENGp801B5rKLb3M"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/xVvCdpikrstpVzfm_nNLnXOe8bZ7lCykg4HLwuLrxXY.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qh60r/our_journey_migrating_100k_lines_of_code_from/", "locked": false, "stickied": false, "created": 1485553533.0, "url": "https://tech.small-improvements.com/2017/01/25/how-to-migrate-an-angularjs-1-app-to-react", "author_flair_text": null, "quarantine": false, "title": "Our journey migrating 100k lines of code from AngularJS to React (Chapter 1)", "created_utc": 1485524733.0, "link_flair_text": null, "distinguished": null, "num_comments": 18, "visited": false, "num_reports": null, "ups": 77}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "educative.io", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qjzyj", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "educativeinc", "media": null, "name": "t3_5qjzyj", "score": 6, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/17401kRQnH8xQK7C2bk24UnafVpvV_ISRrBNd0GRsx8.jpg?s=3a8d0abf557dba7566d401cb82d2c2f1", "width": 1024, "height": 512}, "resolutions": [{"url": "https://i.redditmedia.com/17401kRQnH8xQK7C2bk24UnafVpvV_ISRrBNd0GRsx8.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=e52664d3f5772c2f555b1919734ba817", "width": 108, "height": 54}, {"url": "https://i.redditmedia.com/17401kRQnH8xQK7C2bk24UnafVpvV_ISRrBNd0GRsx8.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=cbbac831bc452cfee593ca1c64c9dffc", "width": 216, "height": 108}, {"url": "https://i.redditmedia.com/17401kRQnH8xQK7C2bk24UnafVpvV_ISRrBNd0GRsx8.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=504e9d5285bbf2676d03935674a9d26e", "width": 320, "height": 160}, {"url": "https://i.redditmedia.com/17401kRQnH8xQK7C2bk24UnafVpvV_ISRrBNd0GRsx8.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=1071a4cedb59fe6eb9c91911ddcff367", "width": 640, "height": 320}, {"url": "https://i.redditmedia.com/17401kRQnH8xQK7C2bk24UnafVpvV_ISRrBNd0GRsx8.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=b17a96e076f0b7296c46eea9e47c923e", "width": 960, "height": 480}], "variants": {}, "id": "psO_nDVY3aK0tJUwQcUN3aYHJrw5N9mDGQWc8PcYrUo"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/mxE8Q8SeofqCXOiVrDrnjHMSE0zSNTUW_HV8MRe3jxY.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qjzyj/the_road_to_learn_react_build_a_hacker_news_app/", "locked": false, "stickied": false, "created": 1485583038.0, "url": "https://www.educative.io/collection/5740745361195008/5676830073815040?ref=redditreactjs", "author_flair_text": null, "quarantine": false, "title": "The Road to Learn React \u2013 Build a Hacker News App Along the Way", "created_utc": 1485554238.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 6}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/MrLeebo/redux-supermodel\"&gt;https://github.com/MrLeebo/redux-supermodel&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Hello, longtime lurker first time poster here. Last week I published my first major open source project for react and I am looking to get feedback or help with code review.&lt;/p&gt;\n\n&lt;p&gt;The purpose of redux-supermodel is to eliminate the boilerplate action creator/reducer code that you have to write when interacting with a REST-like API via AJAX. &lt;/p&gt;\n\n&lt;p&gt;This is derived from a similar set of files I wrote for an internal application at work, but now I&amp;#39;ve cleaned it up, added tests (100% coverage!), and hastily wrote lots of documentation.&lt;/p&gt;\n\n&lt;p&gt;Your feedback is appreciated!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "https://github.com/MrLeebo/redux-supermodel\n\n\nHello, longtime lurker first time poster here. Last week I published my first major open source project for react and I am looking to get feedback or help with code review.\n\nThe purpose of redux-supermodel is to eliminate the boilerplate action creator/reducer code that you have to write when interacting with a REST-like API via AJAX. \n\nThis is derived from a similar set of files I wrote for an internal application at work, but now I've cleaned it up, added tests (100% coverage!), and hastily wrote lots of documentation.\n\n\nYour feedback is appreciated!", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qjjao", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "MrLeebo", "media": null, "name": "t3_5qjjao", "score": 6, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/mwk2jZM2vdVuQBscdT5Fa8l5T7xa5iG2CeAq29Qml-g.jpg?s=19782a9b1b7036fc7aecf3c8c0ae6e3a", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/mwk2jZM2vdVuQBscdT5Fa8l5T7xa5iG2CeAq29Qml-g.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=dce39c1dfcf6570f16227a446029246b", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/mwk2jZM2vdVuQBscdT5Fa8l5T7xa5iG2CeAq29Qml-g.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=01f4296edd4648112749bdf44c7b4981", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/mwk2jZM2vdVuQBscdT5Fa8l5T7xa5iG2CeAq29Qml-g.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=920ad1da507b16e49234a52184424e81", "width": 320, "height": 320}], "variants": {}, "id": "spqNEpU-NzZk8gdUIjkFOP8_xFEPU-rtg4pY1OUu7No"}]}, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "self", "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qjjao/reduxsupermodel_reducer_and_action_creators_for/", "locked": false, "stickied": false, "created": 1485578204.0, "url": "https://www.reddit.com/r/reactjs/comments/5qjjao/reduxsupermodel_reducer_and_action_creators_for/", "author_flair_text": null, "quarantine": false, "title": "Redux-Supermodel - Reducer and Action Creators for interacting with REST-like APIs", "created_utc": 1485549404.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 6}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I think I found a bug, or, at least a kind of unexpected shortcoming with ReactCSSTransitionGroup.  Take the following example, pulled from the docs&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; &amp;lt;ReactCSSTransitionGroup\n transitionName={ {\n    enter: &amp;#39;enter&amp;#39;,\n    enterActive: &amp;#39;enterActive&amp;#39;,\n    leave: &amp;#39;leave&amp;#39;,\n    leaveActive: &amp;#39;leaveActive&amp;#39;,\n    appear: &amp;#39;appear&amp;#39;,\n    appearActive: &amp;#39;appearActive&amp;#39;\n  } }&amp;gt;\n  {item}\n &amp;lt;/ReactCSSTransitionGroup&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So React lets you define custom classes for the transition.  It can be very useful, nay, essential, for cases where you don&amp;#39;t want the element always repeating the same animation every time it appears.  It lets you dynamically specific conditions where the transition animation could be completely different. &lt;/p&gt;\n\n&lt;p&gt;The accompanying CSS for the above might look like this:  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;  .example-appear {\n    opacity: 0.01;\n  }\n\n .example-appear.example-appear-active {\n   opacity: 1;\n   transition: opacity .5s ease-in;\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Easy enough.  But if you reverse the order of those classes in the CSS file, placing the -active version on the top the transition will no longer fire.  This can be a genuine annoyance if you are using custom classes imo, because sometimes you might legitimately want the transition to proceed in the opposite direction.&lt;/p&gt;\n\n&lt;p&gt;Instead of example-appear and example-appear-active, it might be two classes named location-right, location-left.  So either class could legitimately serve as the appear or activeAppear steps, but it will only work one way based on which class appears before the other in your css file :(&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I think I found a bug, or, at least a kind of unexpected shortcoming with ReactCSSTransitionGroup.  Take the following example, pulled from the docs\n    \n     &lt;ReactCSSTransitionGroup\n     transitionName={ {\n        enter: 'enter',\n        enterActive: 'enterActive',\n        leave: 'leave',\n        leaveActive: 'leaveActive',\n        appear: 'appear',\n        appearActive: 'appearActive'\n      } }&gt;\n      {item}\n     &lt;/ReactCSSTransitionGroup&gt;\n\nSo React lets you define custom classes for the transition.  It can be very useful, nay, essential, for cases where you don't want the element always repeating the same animation every time it appears.  It lets you dynamically specific conditions where the transition animation could be completely different. \n\nThe accompanying CSS for the above might look like this:  \n      \n      .example-appear {\n        opacity: 0.01;\n      }\n\n     .example-appear.example-appear-active {\n       opacity: 1;\n       transition: opacity .5s ease-in;\n     }\n\nEasy enough.  But if you reverse the order of those classes in the CSS file, placing the -active version on the top the transition will no longer fire.  This can be a genuine annoyance if you are using custom classes imo, because sometimes you might legitimately want the transition to proceed in the opposite direction.\n\nInstead of example-appear and example-appear-active, it might be two classes named location-right, location-left.  So either class could legitimately serve as the appear or activeAppear steps, but it will only work one way based on which class appears before the other in your css file :(", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qm5f2", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "sevenseventoeleven", "media": null, "name": "t3_5qm5f2", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": 1485582283.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qm5f2/weird_gotcha_with_reactcsstransitiongroup/", "locked": false, "stickied": false, "created": 1485610865.0, "url": "https://www.reddit.com/r/reactjs/comments/5qm5f2/weird_gotcha_with_reactcsstransitiongroup/", "author_flair_text": null, "quarantine": false, "title": "Weird Gotcha with ReactCSSTransitionGroup", "created_utc": 1485582065.0, "link_flair_text": null, "distinguished": null, "num_comments": 3, "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m building a web app with two main parts:\n1. The main app, used by consumers in need of certain services. Users can browse, favorite, and will have a profile.\n2. Service/Business management dashboard. From here a user can manage their business listing on the site. Completely different design, sits as its own dashboard. &lt;/p&gt;\n\n&lt;p&gt;The main reuse between the two apps is really going to be authentication and some helper utils (including a fetch that is configured to use the auth token when available) . There may also be other smaller parts that are reused as well. &lt;/p&gt;\n\n&lt;p&gt;Initially, I was building these all within the same app (i.e. same JS bundle). However, I don&amp;#39;t want to bloat the bundle with code from either app following the other around. Similarly, then I have to deal with separating CSS so there isn&amp;#39;t any interference. &lt;/p&gt;\n\n&lt;p&gt;I should also mention I&amp;#39;m using &lt;a href=\"https://github.com/facebookincubator/create-react-app\"&gt;Create React App&lt;/a&gt; to get all this going faster (I&amp;#39;m a bit of a noob), at the expense of webpack configurability.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m leaning towards just abstracting common elements to a &amp;quot;common&amp;quot; package within the repo and using the npm &lt;code&gt;file:.../foo/bar&lt;/code&gt; pattern to pull it in.&lt;/p&gt;\n\n&lt;p&gt;One of the downsides of all this is that the &amp;quot;common&amp;quot; package will also have dev/prod/staging variants (mainly to differentiate the API urls it hits) and I&amp;#39;m not quite sure how to cleanly go about integrating it as an npm dependency while needing multiple versions - or is that just a matter of having babel output for the various environments when I build the &amp;quot;common&amp;quot; package&amp;#39;s dist?&lt;/p&gt;\n\n&lt;p&gt;Hopefully this all makes sense - to a large degree, writing all of this out is also an exercise in helping me think through potential solutions. &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm building a web app with two main parts:\n1. The main app, used by consumers in need of certain services. Users can browse, favorite, and will have a profile.\n2. Service/Business management dashboard. From here a user can manage their business listing on the site. Completely different design, sits as its own dashboard. \n\nThe main reuse between the two apps is really going to be authentication and some helper utils (including a fetch that is configured to use the auth token when available) . There may also be other smaller parts that are reused as well. \n\nInitially, I was building these all within the same app (i.e. same JS bundle). However, I don't want to bloat the bundle with code from either app following the other around. Similarly, then I have to deal with separating CSS so there isn't any interference. \n\nI should also mention I'm using [Create React App](https://github.com/facebookincubator/create-react-app) to get all this going faster (I'm a bit of a noob), at the expense of webpack configurability.\n\nI'm leaning towards just abstracting common elements to a \"common\" package within the repo and using the npm `file:.../foo/bar` pattern to pull it in.\n\nOne of the downsides of all this is that the \"common\" package will also have dev/prod/staging variants (mainly to differentiate the API urls it hits) and I'm not quite sure how to cleanly go about integrating it as an npm dependency while needing multiple versions - or is that just a matter of having babel output for the various environments when I build the \"common\" package's dist?\n\nHopefully this all makes sense - to a large degree, writing all of this out is also an exercise in helping me think through potential solutions. ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qm3kb", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "timworx", "media": null, "name": "t3_5qm3kb", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/LDQ3g8mcQI36EMqitVHZ9fZwxtLC-Dz0PPQ3qlhJBsc.jpg?s=67b53010fe3e81e05ab939f7adf97e55", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/LDQ3g8mcQI36EMqitVHZ9fZwxtLC-Dz0PPQ3qlhJBsc.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=ca65f3732b69ecdc515180bcbf791994", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/LDQ3g8mcQI36EMqitVHZ9fZwxtLC-Dz0PPQ3qlhJBsc.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=4f6bebbabd59e6f2b1e51f2dc3d3a6dc", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/LDQ3g8mcQI36EMqitVHZ9fZwxtLC-Dz0PPQ3qlhJBsc.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=5170a5e1d7a1eb03fb60d811e0a31c0e", "width": 320, "height": 320}], "variants": {}, "id": "mBc-XAG_ARzu3NqAv1R9fILgbSWs8GG3IWbKG9oqtoI"}]}, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "self", "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qm3kb/sharing_components_between_separate_react_apps/", "locked": false, "stickied": false, "created": 1485610021.0, "url": "https://www.reddit.com/r/reactjs/comments/5qm3kb/sharing_components_between_separate_react_apps/", "author_flair_text": null, "quarantine": false, "title": "Sharing components between separate React Apps", "created_utc": 1485581221.0, "link_flair_text": null, "distinguished": null, "num_comments": 2, "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "github.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qjjp3", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "droctagonapus", "media": null, "name": "t3_5qjjp3", "score": 5, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/t9432OwYMmTzqgkDQ4E5C9ORStiIBN4Y6oS9R5YFuN8.jpg?s=5fe0467be4b5409f1ce1a6c24e2c1c24", "width": 360, "height": 360}, "resolutions": [{"url": "https://i.redditmedia.com/t9432OwYMmTzqgkDQ4E5C9ORStiIBN4Y6oS9R5YFuN8.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=b27c21f0f5a4cc007941b129022b9382", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/t9432OwYMmTzqgkDQ4E5C9ORStiIBN4Y6oS9R5YFuN8.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=9f2693867b694d15ae4d57e3476dc380", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/t9432OwYMmTzqgkDQ4E5C9ORStiIBN4Y6oS9R5YFuN8.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=78fd737988dbedf07a7aaaf3edddf20f", "width": 320, "height": 320}], "variants": {}, "id": "CxtfWvEUKrIcu7h8eSjzXKsA5wpM_u9p2iPr_QGqWIs"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/rhmN56I3nTujdMGRDcmkPvJAdEhpVvML_T324YnYtqk.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qjjp3/spectacle_v200_released/", "locked": false, "stickied": false, "created": 1485578325.0, "url": "https://github.com/FormidableLabs/spectacle/releases/tag/v2.0.0", "author_flair_text": null, "quarantine": false, "title": "Spectacle v2.0.0 Released", "created_utc": 1485549525.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 5}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I ran into an interesting issue earlier today and I was wondering if I could get some general advice on how best to deal with it.&lt;/p&gt;\n\n&lt;p&gt;We have a component that among other things renders a date using moment, something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;render () {\n  return (\n    {moment(this.props.someDate).format(&amp;#39;L&amp;#39;)}\n  )\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;this.props.someDate is instanceOf date.&lt;/p&gt;\n\n&lt;p&gt;I found that when this was run on the server, I was getting different results from the client and would get the warning about different server vs. client markup.&lt;/p&gt;\n\n&lt;p&gt;The reason was the server&amp;#39;s timezone was not set and fell back on UTC whereas when run in the browser, it would use the current browser&amp;#39;s timezone.  This had the effect of rendering two different dates - server render would be UTC and client-render would use the browser&amp;#39;s timezone.&lt;/p&gt;\n\n&lt;p&gt;I left the server&amp;#39;s timezone as UTC because I realized that the initial render would always be inherently flawed.  I could set it to PST and it would work fine for me, but someone visiting the site in say EST would get a different initial render vs. client render.&lt;/p&gt;\n\n&lt;p&gt;I got around it by doing something like this....&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;componentDidMount () {\n  this.setState({someDate: moment(this.props.someDate).format(&amp;#39;L&amp;#39;)})\n}\n\nrender () {\n  return (\n    {this.state.someDate}\n  )\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This has the effect of setting the initial render for both client/server to blank and once the browser mounts, to re-render with the correct timezone.&lt;/p&gt;\n\n&lt;p&gt;So my question --&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Is this something that I should worry about / do?&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Are the downsides of having this property in state (and calling &lt;code&gt;setState&lt;/code&gt; in componentDidMount) outweigh the different client vs. server initial render?&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I ran into an interesting issue earlier today and I was wondering if I could get some general advice on how best to deal with it.\n\nWe have a component that among other things renders a date using moment, something like this:\n\n    render () {\n      return (\n        {moment(this.props.someDate).format('L')}\n      )\n    }\n\nthis.props.someDate is instanceOf date.\n\nI found that when this was run on the server, I was getting different results from the client and would get the warning about different server vs. client markup.\n\nThe reason was the server's timezone was not set and fell back on UTC whereas when run in the browser, it would use the current browser's timezone.  This had the effect of rendering two different dates - server render would be UTC and client-render would use the browser's timezone.\n\nI left the server's timezone as UTC because I realized that the initial render would always be inherently flawed.  I could set it to PST and it would work fine for me, but someone visiting the site in say EST would get a different initial render vs. client render.\n\nI got around it by doing something like this....\n\n    componentDidMount () {\n      this.setState({someDate: moment(this.props.someDate).format('L')})\n    }\n\n    render () {\n      return (\n        {this.state.someDate}\n      )\n    }\n\nThis has the effect of setting the initial render for both client/server to blank and once the browser mounts, to re-render with the correct timezone.\n\nSo my question --\n\n- Is this something that I should worry about / do?\n\n- Are the downsides of having this property in state (and calling `setState` in componentDidMount) outweigh the different client vs. server initial render?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qlfhy", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "tswaters", "media": null, "name": "t3_5qlfhy", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qlfhy/rendering_dates_in_isomorphic_apps/", "locked": false, "stickied": false, "created": 1485600121.0, "url": "https://www.reddit.com/r/reactjs/comments/5qlfhy/rendering_dates_in_isomorphic_apps/", "author_flair_text": null, "quarantine": false, "title": "rendering dates in isomorphic apps", "created_utc": 1485571321.0, "link_flair_text": null, "distinguished": null, "num_comments": 4, "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;children prop to pass children elements directly into their output. (&lt;a href=\"https://facebook.github.io/react/docs/react-api.html\"&gt;https://facebook.github.io/react/docs/react-api.html&lt;/a&gt;) can anyone elaborate this ?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "children prop to pass children elements directly into their output. (https://facebook.github.io/react/docs/react-api.html) can anyone elaborate this ?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qjdsk", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "jinjamaverick", "media": null, "name": "t3_5qjdsk", "score": 3, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/E8hbTWC6sl7zEtSlnxa01Z57HAjeRLwH2Vilg5xnEks.jpg?s=49c100658de94c820a5601177c849781", "width": 1200, "height": 630}, "resolutions": [{"url": "https://i.redditmedia.com/E8hbTWC6sl7zEtSlnxa01Z57HAjeRLwH2Vilg5xnEks.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=e408b948f10ff999768bb5b01b4546de", "width": 108, "height": 56}, {"url": "https://i.redditmedia.com/E8hbTWC6sl7zEtSlnxa01Z57HAjeRLwH2Vilg5xnEks.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=cc43321cba7f2d3ad74b98fdd03a8716", "width": 216, "height": 113}, {"url": "https://i.redditmedia.com/E8hbTWC6sl7zEtSlnxa01Z57HAjeRLwH2Vilg5xnEks.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=35339a073eb97cd50220e4a9ca839c07", "width": 320, "height": 168}, {"url": "https://i.redditmedia.com/E8hbTWC6sl7zEtSlnxa01Z57HAjeRLwH2Vilg5xnEks.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=9fdb9ace2294dc7dcc06320dc2812425", "width": 640, "height": 336}, {"url": "https://i.redditmedia.com/E8hbTWC6sl7zEtSlnxa01Z57HAjeRLwH2Vilg5xnEks.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=a14956869bc4b605bb8e09d4b2ca4fdd", "width": 960, "height": 504}, {"url": "https://i.redditmedia.com/E8hbTWC6sl7zEtSlnxa01Z57HAjeRLwH2Vilg5xnEks.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=6957097a1e94d74de35085388190e094", "width": 1080, "height": 567}], "variants": {}, "id": "MChSxegodzvSWROsnWSxwyC7wZ0mwEcGj02-KIKOoQk"}]}, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "self", "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qjdsk/react_children_prop_help_understanding/", "locked": false, "stickied": false, "created": 1485576721.0, "url": "https://www.reddit.com/r/reactjs/comments/5qjdsk/react_children_prop_help_understanding/", "author_flair_text": null, "quarantine": false, "title": "React children prop ? help understanding", "created_utc": 1485547921.0, "link_flair_text": null, "distinguished": null, "num_comments": 2, "visited": false, "num_reports": null, "ups": 3}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "github.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qhyjj", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "magenta_placenta", "media": null, "name": "t3_5qhyjj", "score": 5, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/BtxGgwyZHjKaVqU8F4jYWWGMAnOnLI2aGn2QkWQh6R8.jpg?s=bb4a6fb457d312e8e5ee9bc3d0fc8fca", "width": 320, "height": 320}, "resolutions": [{"url": "https://i.redditmedia.com/BtxGgwyZHjKaVqU8F4jYWWGMAnOnLI2aGn2QkWQh6R8.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=0f45b6a62b3d2247cbf01d4f1bc2b4e7", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/BtxGgwyZHjKaVqU8F4jYWWGMAnOnLI2aGn2QkWQh6R8.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=f33c3bf7bdc3f00e21f647160b3f55e7", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/BtxGgwyZHjKaVqU8F4jYWWGMAnOnLI2aGn2QkWQh6R8.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=b22884fadd2f57edc72f4469a7b6eda8", "width": 320, "height": 320}], "variants": {}, "id": "Q69W3k-bSIZQjQ--18ukLTSouua5PsT4AZowEYWfIpw"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/xONgXjrgXxN3ZvojEgtZWpxngQWaM0WSCOo9-iK038M.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qhyjj/reactplanner_a_react_component_which_can_be_used/", "locked": false, "stickied": false, "created": 1485562453.0, "url": "https://github.com/cvdlab/react-planner", "author_flair_text": null, "quarantine": false, "title": "react-planner - a React Component which can be used to draw model buildings. Draw a 2D floorplan and navigate it in 3D mode", "created_utc": 1485533653.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 5}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m building a React component that is effectively a carousel.&lt;/p&gt;\n\n&lt;p&gt;Sometimes, this carousel (which I&amp;#39;ve called Slides) will have form data in that needs validating and collecting at the end.&lt;/p&gt;\n\n&lt;p&gt;I pass down a the form question and accompanying input in Page.slideData function. I pass down a small schema for the form also, telling Slides how each separate slide should be validated.&lt;/p&gt;\n\n&lt;p&gt;My issue is getting a reference to the value of each input. In Slides.collectData func I test against a &amp;quot;testing&amp;quot; string. But I cannot figure out how to get the value of the current input in place of the &amp;quot;testing&amp;quot; string. I will also need all the form data at the end, and will pass it back to the parent once the end it reached.&lt;/p&gt;\n\n&lt;p&gt;Any help would be much appreciated.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class Page extends Component {\n  constructor(props) {\n    super(props);\n    this.slideData = this.slideData.bind(this);\n    this.formSchema = this.formSchema.bind(this);\n  }\n  slideData() {\n    return [\n        label: `When is this thing?`,\n        input: &amp;lt;input type=&amp;quot;text&amp;quot; /&amp;gt;,\n      }, {\n        label: &amp;#39;Will this be private?&amp;#39;,\n        input: &amp;lt;input type=&amp;quot;checkbox&amp;quot; /&amp;gt;,\n      },\n    ];\n  }\n  formSchema() {\n    return [\n      { key: &amp;#39;date&amp;#39;, validate: String },\n      { key: &amp;#39;isPrivate&amp;#39;, validate: Boolean },\n    ];\n  }\n  render() {\n    return (\n      &amp;lt;main className=&amp;quot;Page&amp;quot;&amp;gt;\n        &amp;lt;Slides\n          data={this.slideData()}\n          formSchema={this.formSchema()}\n        /&amp;gt;\n      &amp;lt;/main&amp;gt;\n    );\n  }\n}\n\n\nclass Slides extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: 1,\n      qty: this.props.data.length,\n      error: null,\n    }\n    this.cycle = this.cycle.bind(this);\n  }\n  moveSlides(newPosition) {\n    const { qty } = this.state;\n    if (newPosition &amp;lt; 1 || newPosition &amp;gt; qty) {\n      return;\n    }\n    this.setState({\n      position: newPosition,\n      error: null,\n    });\n  }\n  cycle(num) {\n    const { position } = this.state;\n    const newPosition = position + num;\n    if (this.props.formSchema) {\n      this.collectData(position, newPosition);\n    } else {\n      this.moveSlides(newPosition);\n    }\n  }\n  collectData(position, newPosition) {\n    const { formSchema } = this.props;\n    const currentSlideSchema = formSchema[position - 1];\n\n    const { collectedData } = this.state;\n    let newCollectedData = Object.assign({}, collectedData);\n    newCollectedData[currentSlideSchema.key] = &amp;#39;testing&amp;#39;;\n\n    if (\n      Match.test(\n        newCollectedData[currentSlideSchema.key],\n        currentSlideSchema.validate\n      ) || position &amp;gt; newPosition) {\n      this.setState({ collectedData: newCollectedData });\n      this.moveSlides(newPosition);\n    } else {\n      this.setState({ error: &amp;quot;Invalid entry&amp;quot; });\n    }\n  }\n  renderSlides() {\n    const { position } = this.state;\n    const { data } = this.props;\n\n    return data.map((slide, idx) =&amp;gt; {\n      const index = idx + 1;\n      let alignment;\n      if (index === position) {\n        alignment = &amp;#39;active&amp;#39;;\n      } else if (index &amp;gt; position) {\n        alignment = &amp;#39;right&amp;#39;;\n      } else {\n        alignment = &amp;#39;left&amp;#39;;\n      }\n      return (\n        &amp;lt;Slide\n          label={slide.label}\n          input={slide.input}\n          key={`Slide_${idx}`}\n          alignment={alignment}\n        /&amp;gt;\n      );\n    });\n  }\n  render() {\n    const { position, error } = this.state;\n\n    return (\n      &amp;lt;div className=&amp;quot;Slides&amp;quot;&amp;gt;\n        &amp;lt;div className=&amp;quot;Slides_ContentWrapper&amp;quot;&amp;gt;\n          {this.renderSlides()}\n        &amp;lt;/div&amp;gt;\n        { error &amp;amp;&amp;amp;\n          &amp;lt;span className=&amp;quot;Slides_Error&amp;quot;&amp;gt;{error}&amp;lt;/span&amp;gt;\n        }\n        &amp;lt;div className=&amp;quot;Slides_Buttons&amp;quot;&amp;gt;\n          &amp;lt;button&amp;gt;onClick={() =&amp;gt; this.cycle(-1)}&amp;gt;Go back&amp;lt;/button&amp;gt;\n          &amp;lt;button&amp;gt;onClick={() =&amp;gt; this.cycle(1)}&amp;gt;Go Forward&amp;lt;/button&amp;gt;\n        &amp;lt;/div&amp;gt;\n      &amp;lt;/div&amp;gt;\n    );\n  }\n}\n\nclass Slide extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const { label, input, alignment } = this.props;\n    return (\n      &amp;lt;div className={`Slide Slide--${alignment}`}&amp;gt;\n        &amp;lt;span className=&amp;quot;Slide_Label&amp;quot;&amp;gt;{ label }&amp;lt;/span&amp;gt;\n        { input }\n      &amp;lt;/div&amp;gt;\n    );\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm building a React component that is effectively a carousel.\n\nSometimes, this carousel (which I've called Slides) will have form data in that needs validating and collecting at the end.\n\nI pass down a the form question and accompanying input in Page.slideData function. I pass down a small schema for the form also, telling Slides how each separate slide should be validated.\n\nMy issue is getting a reference to the value of each input. In Slides.collectData func I test against a \"testing\" string. But I cannot figure out how to get the value of the current input in place of the \"testing\" string. I will also need all the form data at the end, and will pass it back to the parent once the end it reached.\n\nAny help would be much appreciated.\n\n    class Page extends Component {\n      constructor(props) {\n        super(props);\n        this.slideData = this.slideData.bind(this);\n        this.formSchema = this.formSchema.bind(this);\n      }\n      slideData() {\n        return [\n            label: `When is this thing?`,\n            input: &lt;input type=\"text\" /&gt;,\n          }, {\n            label: 'Will this be private?',\n            input: &lt;input type=\"checkbox\" /&gt;,\n          },\n        ];\n      }\n      formSchema() {\n        return [\n          { key: 'date', validate: String },\n          { key: 'isPrivate', validate: Boolean },\n        ];\n      }\n      render() {\n        return (\n          &lt;main className=\"Page\"&gt;\n            &lt;Slides\n              data={this.slideData()}\n              formSchema={this.formSchema()}\n            /&gt;\n          &lt;/main&gt;\n        );\n      }\n    }\n    \n    \n    class Slides extends Component {\n      constructor(props) {\n        super(props);\n        this.state = {\n          position: 1,\n          qty: this.props.data.length,\n          error: null,\n        }\n        this.cycle = this.cycle.bind(this);\n      }\n      moveSlides(newPosition) {\n        const { qty } = this.state;\n        if (newPosition &lt; 1 || newPosition &gt; qty) {\n          return;\n        }\n        this.setState({\n          position: newPosition,\n          error: null,\n        });\n      }\n      cycle(num) {\n        const { position } = this.state;\n        const newPosition = position + num;\n        if (this.props.formSchema) {\n          this.collectData(position, newPosition);\n        } else {\n          this.moveSlides(newPosition);\n        }\n      }\n      collectData(position, newPosition) {\n        const { formSchema } = this.props;\n        const currentSlideSchema = formSchema[position - 1];\n    \n        const { collectedData } = this.state;\n        let newCollectedData = Object.assign({}, collectedData);\n        newCollectedData[currentSlideSchema.key] = 'testing';\n    \n        if (\n          Match.test(\n            newCollectedData[currentSlideSchema.key],\n            currentSlideSchema.validate\n          ) || position &gt; newPosition) {\n          this.setState({ collectedData: newCollectedData });\n          this.moveSlides(newPosition);\n        } else {\n          this.setState({ error: \"Invalid entry\" });\n        }\n      }\n      renderSlides() {\n        const { position } = this.state;\n        const { data } = this.props;\n    \n        return data.map((slide, idx) =&gt; {\n          const index = idx + 1;\n          let alignment;\n          if (index === position) {\n            alignment = 'active';\n          } else if (index &gt; position) {\n            alignment = 'right';\n          } else {\n            alignment = 'left';\n          }\n          return (\n            &lt;Slide\n              label={slide.label}\n              input={slide.input}\n              key={`Slide_${idx}`}\n              alignment={alignment}\n            /&gt;\n          );\n        });\n      }\n      render() {\n        const { position, error } = this.state;\n    \n        return (\n          &lt;div className=\"Slides\"&gt;\n            &lt;div className=\"Slides_ContentWrapper\"&gt;\n              {this.renderSlides()}\n            &lt;/div&gt;\n            { error &amp;&amp;\n              &lt;span className=\"Slides_Error\"&gt;{error}&lt;/span&gt;\n            }\n            &lt;div className=\"Slides_Buttons\"&gt;\n              &lt;button&gt;onClick={() =&gt; this.cycle(-1)}&gt;Go back&lt;/button&gt;\n              &lt;button&gt;onClick={() =&gt; this.cycle(1)}&gt;Go Forward&lt;/button&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        );\n      }\n    }\n    \n    class Slide extends Component {\n      constructor(props) {\n        super(props);\n      }\n      render() {\n        const { label, input, alignment } = this.props;\n        return (\n          &lt;div className={`Slide Slide--${alignment}`}&gt;\n            &lt;span className=\"Slide_Label\"&gt;{ label }&lt;/span&gt;\n            { input }\n          &lt;/div&gt;\n        );\n      }\n    }", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qk5x4", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "DonMildreone", "media": null, "name": "t3_5qk5x4", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qk5x4/need_help_managing_state_of_input_values_with/", "locked": false, "stickied": false, "created": 1485584765.0, "url": "https://www.reddit.com/r/reactjs/comments/5qk5x4/need_help_managing_state_of_input_values_with/", "author_flair_text": null, "quarantine": false, "title": "Need help managing state of input values with React", "created_utc": 1485555965.0, "link_flair_text": null, "distinguished": null, "num_comments": 3, "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The guidance from Mobx docs &amp;quot;Most applications benefit from having at least two stores. One for the UI state and one or more for the domain state...This store typically doesn&amp;#39;t have much logic in it, but will store a plethora of loosely coupled pieces of information about the UI. &lt;a href=\"https://mobx.js.org/best/store.html\"&gt;https://mobx.js.org/best/store.html&lt;/a&gt;.  Has anybody structured this as multiple UI state stores to keep things decoupled and possibly simpler to test?  I was thinking changing and going this route but I thought I would get some feedback first&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "The guidance from Mobx docs \"Most applications benefit from having at least two stores. One for the UI state and one or more for the domain state...This store typically doesn't have much logic in it, but will store a plethora of loosely coupled pieces of information about the UI. https://mobx.js.org/best/store.html.  Has anybody structured this as multiple UI state stores to keep things decoupled and possibly simpler to test?  I was thinking changing and going this route but I thought I would get some feedback first", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5qjrsj", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "szyglowicz", "media": null, "name": "t3_5qjrsj", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5qjrsj/mobx_multiple_ui_state_stores/", "locked": false, "stickied": false, "created": 1485580680.0, "url": "https://www.reddit.com/r/reactjs/comments/5qjrsj/mobx_multiple_ui_state_stores/", "author_flair_text": null, "quarantine": false, "title": "Mobx: Multiple UI State Stores?", "created_utc": 1485551880.0, "link_flair_text": null, "distinguished": null, "num_comments": 5, "visited": false, "num_reports": null, "ups": 1}}], "after": "t3_5qjrsj", "before": null}}